name: Backend CI

on:
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22]

    # Job-level env (available to all steps). Do NOT print these.
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: ${{ secrets.PORT }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Enable Corepack (Yarn)
        run: corepack enable

      - name: Ensure PM2 is installed
        run: npm i -g pm2

      - name: Stop PM2 apps if any (no-op OK)
        run: pm2 stop all || echo "No PM2 processes to stop"

      # ---------- Backend ----------
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          yarn --version
          yarn install --frozen-lockfile

      - name: Write backend .env from PROD secret (optional)
        if: ${{ secrets.PROD != '' }}
        working-directory: ./backend
        run: |
          printf "%s" "${{ secrets.PROD }}" > .env

      - name: Run Backend Tests
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: yarn test

      # ---------- Frontend ----------
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          rm -rf ./build
          yarn install --frozen-lockfile

      - name: Build Frontend
        working-directory: ./frontend
        run: yarn build

      # ---------- (Optional) Deploy/Run with PM2 ----------
      # Make sure you have backend/ecosystem.config.js committed, or swap command accordingly.
      - name: Start/Reload PM2 (backend)
        working-directory: ./backend
        run: |
          if [ -f ecosystem.config.js ]; then
            pm2 start ecosystem.config.js --env production || pm2 reload ecosystem.config.js --env production
          else
            # Fallback: start by script; replace server.js/name to match your project
            pm2 start server.js --name lostandfound-backend || pm2 reload lostandfound-backend
          fi

      - name: Save PM2 process list
        run: pm2 save || true
