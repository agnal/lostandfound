name: Backend CI

on:
  push:
    branches: [main]

jobs:
  test:
    name: Run Tests
    # If your runner has extra labels (case-sensitive), add them:
    # runs-on: [self-hosted, linux, x64]
    runs-on: self-hosted

    strategy:
      matrix: { node-version: [22] }

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      # ---- Backend ----
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run Backend Tests
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: npm test

      # ---- Frontend ----
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      # ---- Deploy with PM2 (safe & idempotent) ----
      - name: Ensure PM2 is installed
        run: npm i -g pm2

      # Optional: write multi-line .env from secret (remove if unused)
      - name: Write Backend .env
        if: ${{ secrets.PROD != '' }}
        working-directory: ./backend
        env:
          PROD_ENV: ${{ secrets.PROD }}
        run: printf "%s" "$PROD_ENV" > .env

      - name: Restart backend with PM2
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          pm2 delete lostandfound-backend || true
          pm2 start npm --name lostandfound-backend -- run start
          pm2 save

      - name: PM2 status
        run: pm2 status
