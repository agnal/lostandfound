name: Backend CI

on:
  push:
    branches:
      - main  # Trigger CI on pushes to the main branch

jobs:
  test:
    name: Run Tests
    runs-on: [self-hosted, linux, x64]  # labels must match your runner exactly

    strategy:
      matrix:
        node-version: [22] # Test on multiple Node.js versions

    # Optional env name; remove if you don't use Environments in GitHub
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js (with npm cache)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      # Install dependencies for backend
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      # Run backend tests
      - name: Run Backend Tests
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: npm test

      # Install dependencies for frontend
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      # Build frontend
      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      # (Optional) Write backend .env from secret (multi-line safe)
      - name: Write Backend .env
        working-directory: ./backend
        env:
          PROD_ENV: ${{ secrets.PROD }}
        run: |
          printf "%s" "$PROD_ENV" > .env

      # (Optional) Restart backend with PM2 â€” safer than "pm2 start all"
      - name: Restart Backend with PM2
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          pm2 delete backend || true
          pm2 start npm --name backend -- run start
          pm2 save
